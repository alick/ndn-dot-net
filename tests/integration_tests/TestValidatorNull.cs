// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
//
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (C) 2017-2019 Regents of the University of California.
/// </summary>
///
namespace net.named_data.jndn.tests.integration_tests {
	
	using System;
	using System.Collections;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	using net.named_data.jndn;
	using net.named_data.jndn.security;
	using net.named_data.jndn.security.pib;
	using net.named_data.jndn.security.tpm;
	using net.named_data.jndn.security.v2;
	using net.named_data.jndn.util;
	
	public class TestValidatorNull {
		public sealed class Anonymous_C3 : DataValidationSuccessCallback {
			public void successCallback(Data data) {
				// Should succeed.
			}
		}
	
		public sealed class Anonymous_C2 : DataValidationFailureCallback {
			public void failureCallback(Data data, ValidationError error) {
				Assert.Fail("Validation should not have failed");
			}
		}
	
		public sealed class Anonymous_C1 : 			InterestValidationSuccessCallback {
			public void successCallback(Interest interest) {
				// Should succeed.
			}
		}
	
		public sealed class Anonymous_C0 : 			InterestValidationFailureCallback {
			public void failureCallback(Interest interest, ValidationError error) {
				Assert.Fail("Validation should not have failed");
			}
		}
	
		internal IdentityManagementFixture fixture_;
	
		public void setUp() {
			fixture_ = new IdentityManagementFixture();
		}
	
		public void testValidateData() {
			PibIdentity identity = fixture_.addIdentity(new Name(
					"/TestValidator/Null"));
			Data data = new Data(new Name("/Some/Other/Data/Name"));
			fixture_.keyChain_.sign(data, new SigningInfo(identity));
	
			ValidatorNull validator = new ValidatorNull();
			validator.validate(data, new TestValidatorNull.Anonymous_C3 (), new TestValidatorNull.Anonymous_C2 ());
		}
	
		public void testValidateInterest() {
			PibIdentity identity = fixture_.addIdentity(new Name(
					"/TestValidator/Null"));
			Interest interest = new Interest(new Name("/Some/Other/Interest/Name"));
			fixture_.keyChain_.sign(interest, new SigningInfo(identity));
	
			ValidatorNull validator = new ValidatorNull();
			validator.validate(interest, new TestValidatorNull.Anonymous_C1 (), new TestValidatorNull.Anonymous_C0 ());
		}
	
		// This is to force an import of net.named_data.jndn.util.
		private static Common dummyCommon_ = new Common();
	}
}
