// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
//
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (C) 2014-2017 Regents of the University of California.
/// </summary>
///
namespace net.named_data.jndn.tests.unit_tests {
	
	using System;
	using System.Collections;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	using net.named_data.jndn;
	using net.named_data.jndn.encoding;
	using net.named_data.jndn.util;
	
	public class TestControlParametersEncodeDecode {
	
		/// <summary>
		/// Test encoding/decoding
		/// </summary>
		///
		/// <exception cref="EncodingException"></exception>
		public void testEncodeDecode() {
			ControlParameters controlParameters = new ControlParameters();
			controlParameters.setName(new Name("/test/control/parameters"));
			controlParameters.setFaceId(1);
			// encode
			Blob encoded = controlParameters.wireEncode();
			// decode
			ControlParameters decodedControlParameters = new ControlParameters();
			decodedControlParameters.wireDecode(encoded);
			// compare
			Assert.AssertEquals(controlParameters.getName().toUri(),
					decodedControlParameters.getName().toUri());
			Assert.AssertEquals(controlParameters.getFaceId(),
					decodedControlParameters.getFaceId());
			Assert.AssertEquals("decoded forwarding flags childInherit is different",
					controlParameters.getForwardingFlags().getChildInherit(),
					decodedControlParameters.getForwardingFlags().getChildInherit());
			Assert.AssertEquals("decoded forwarding flags capture is different",
					controlParameters.getForwardingFlags().getCapture(),
					decodedControlParameters.getForwardingFlags().getCapture());
		}
	
		/// <summary>
		/// Test encoding/decoding with no name defined
		/// </summary>
		///
		/// <exception cref="EncodingException"></exception>
		public void testEncodeDecodeWithNoName() {
			ControlParameters controlParameters = new ControlParameters();
			controlParameters.setStrategy(new Name(
					"/localhost/nfd/strategy/broadcast"));
			controlParameters.setUri("null://");
			// encode
			Blob encoded = controlParameters.wireEncode();
			// decode
			ControlParameters decodedControlParameters = new ControlParameters();
			decodedControlParameters.wireDecode(encoded);
			// compare
			Assert.AssertEquals(controlParameters.getStrategy().toUri(),
					decodedControlParameters.getStrategy().toUri());
			Assert.AssertEquals(controlParameters.getUri(),
					decodedControlParameters.getUri());
		}
	
		/// <summary>
		/// Test that not setting the any properties returns in an (almost) empty Blob
		/// </summary>
		///
		public void testExceptionsThrown() {
			ControlParameters controlParameters = new ControlParameters();
			Blob encoded = controlParameters.wireEncode();
			Assert.AssertEquals(2, encoded.buf().limit());
			// only TLV type 104 and length 0 should be set
		}
	}
}
