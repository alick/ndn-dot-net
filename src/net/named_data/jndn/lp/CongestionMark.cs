// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
//
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (C) 2018-2019 Regents of the University of California.
/// </summary>
///
namespace net.named_data.jndn.lp {
	
	using System;
	using System.Collections;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// CongestionMark represents the congestion mark header field in an NDNLPv2
	/// packet.
	/// http://redmine.named-data.net/projects/nfd/wiki/NDNLPv2
	/// </summary>
	///
	public class CongestionMark {
		public CongestionMark() {
			this.congestionMark_ = 0;
		}
	
		/// <summary>
		/// Get the congestion mark value.
		/// </summary>
		///
		/// <returns>The congestion mark value.</returns>
		public long getCongestionMark() {
			return congestionMark_;
		}
	
		/// <summary>
		/// Set the congestion mark value.
		/// </summary>
		///
		/// <param name="congestionMark">The congestion mark ID value.</param>
		public void setCongestionMark(long congestionMark) {
			congestionMark_ = congestionMark;
		}
	
		/// <summary>
		/// Get the first header field in lpPacket which is a CongestionMark. This is
		/// an internal method which the application normally would not use.
		/// </summary>
		///
		/// <param name="lpPacket">The LpPacket with the header fields to search.</param>
		/// <returns>The first CongestionMark header field, or null if not found.</returns>
		static public CongestionMark getFirstHeader(LpPacket lpPacket) {
			for (int i = 0; i < lpPacket.countHeaderFields(); ++i) {
				Object field = lpPacket.getHeaderField(i);
				if (field  is  CongestionMark)
					return (CongestionMark) field;
			}
	
			return null;
		}
	
		private long congestionMark_;
	}
}
