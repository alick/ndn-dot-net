// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
//
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (C) 2017-2018 Regents of the University of California.
/// </summary>
///
namespace net.named_data.jndn.security.v2.validator_config {
	
	using System;
	using System.Collections;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	using net.named_data.jndn;
	using net.named_data.jndn.security;
	using net.named_data.jndn.security.v2;
	using net.named_data.jndn.util.regex;
	
	public class ConfigRegexChecker : ConfigChecker {
		public ConfigRegexChecker(String regexString) {
			regex_ = new NdnRegexTopMatcher(regexString);
		}
	
		protected internal override bool checkNames(Name packetName, Name keyLocatorName,
				ValidationState state) {
			bool result;
			try {
				result = regex_.match(keyLocatorName);
			} catch (NdnRegexMatcherBase.Error ex) {
				throw new ValidatorConfigError("Error matching regex: " + ex);
			}
	
			if (!result)
				state.fail(new ValidationError(net.named_data.jndn.security.v2.ValidationError.POLICY_ERROR,
						"KeyLocator check failed: regex " + regex_.getExpr()
								+ " for packet " + packetName.toUri()
								+ " is invalid (KeyLocator="
								+ keyLocatorName.toUri() + ")"));
	
			return result;
		}
	
		private readonly NdnRegexTopMatcher regex_;
	}
}
