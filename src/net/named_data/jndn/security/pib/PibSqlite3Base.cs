// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
//
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (C) 2017 Regents of the University of California.
/// </summary>
///
namespace net.named_data.jndn.security.pib {
	
	using System;
	using System.Collections;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// PibSqlite3Base is an abstract base class used by PibSqlite3, etc. to
	/// provide protected SQL strings and helpers so the subclasses can work with
	/// similar tables using their own SQLite libraries.
	/// </summary>
	///
	public abstract class PibSqlite3Base : PibImpl {
		protected internal const String INITIALIZATION1 = "CREATE TABLE IF NOT EXISTS                         \n"
				+ "  tpmInfo(                                         \n"
				+ "    tpm_locator           BLOB                     \n"
				+ "  );                                               \n";
		protected internal const String INITIALIZATION2 = "CREATE TABLE IF NOT EXISTS                         \n"
				+ "  identities(                                      \n"
				+ "    id                    INTEGER PRIMARY KEY,     \n"
				+ "    identity              BLOB NOT NULL,           \n"
				+ "    is_default            INTEGER DEFAULT 0        \n"
				+ "  );                                               \n";
		protected internal const String INITIALIZATION3 = "CREATE UNIQUE INDEX IF NOT EXISTS                  \n"
				+ "  identityIndex ON identities(identity);           \n";
		protected internal const String INITIALIZATION4 = "CREATE TABLE IF NOT EXISTS                         \n"
				+ "  keys(                                            \n"
				+ "    id                    INTEGER PRIMARY KEY,     \n"
				+ "    identity_id           INTEGER NOT NULL,        \n"
				+ "    key_name              BLOB NOT NULL,           \n"
				+ "    key_bits              BLOB NOT NULL,           \n"
				+ "    is_default            INTEGER DEFAULT 0        \n"
				+ "  );                                               \n";
		protected internal const String INITIALIZATION5 = "CREATE UNIQUE INDEX IF NOT EXISTS                  \n"
				+ "  keyIndex ON keys(key_name);                      \n";
		protected internal const String INITIALIZATION6 = "CREATE TABLE IF NOT EXISTS                         \n"
				+ "  certificates(                                    \n"
				+ "    id                    INTEGER PRIMARY KEY,     \n"
				+ "    key_id                INTEGER NOT NULL,        \n"
				+ "    certificate_name      BLOB NOT NULL,           \n"
				+ "    certificate_data      BLOB NOT NULL,           \n"
				+ "    is_default            INTEGER DEFAULT 0        \n"
				+ "  );                                               \n";
		protected internal const String INITIALIZATION7 = "CREATE UNIQUE INDEX IF NOT EXISTS                  \n"
				+ "  certIndex ON certificates(certificate_name);     \n";
	
		protected internal const String SELECT_getTpmLocator = "SELECT tpm_locator FROM TpmInfo";
	
		protected internal const String SELECT_hasIdentity = "SELECT id FROM identities WHERE identity=?";
		protected internal const String SELECT_removeIdentity = "SELECT keys.id "
				+ "FROM keys JOIN identities ON keys.identity_id=identities.id "
				+ "WHERE identities.identity=?";
		protected internal const String DELETE_removeIdentity_certificates = "DELETE FROM certificates WHERE key_id=?";
		protected internal const String DELETE_removeIdentity_keys = "DELETE FROM keys WHERE id=?";
		protected internal const String DELETE_removeIdentity_identity = "DELETE FROM identities WHERE identity=?";
		protected internal const String DELETE_clearIdentities_certificates = "DELETE FROM certificates";
		protected internal const String DELETE_clearIdentities_keys = "DELETE FROM keys";
		protected internal const String DELETE_clearIdentities_identities = "DELETE FROM identities";
		protected internal const String SELECT_getIdentities = "SELECT identity FROM identities";
		protected internal const String UPDATE_setDefaultIdentity_reset = "UPDATE identities SET is_default=0 WHERE is_default=1";
		protected internal const String UPDATE_setDefaultIdentity_set = "UPDATE identities SET is_default=1 WHERE identity=?";
		protected internal const String SELECT_getDefaultIdentity = "SELECT identity FROM identities WHERE is_default=1";
	
		protected internal const String SELECT_hasKey = "SELECT id FROM keys WHERE key_name=?";
		protected internal const String INSERT_addKey = "INSERT INTO keys (identity_id, key_name, key_bits) "
				+ "VALUES ((SELECT id FROM identities WHERE identity=?), ?, ?)";
		protected internal const String UPDATE_addKey = "UPDATE keys SET key_bits=? WHERE key_name=?";
		protected internal const String DELETE_removeKey_certificates = "DELETE FROM certificates WHERE key_id=(SELECT id FROM keys WHERE key_name=?)";
		protected internal const String DELETE_removeKey_keys = "DELETE FROM keys WHERE key_name=?";
		protected internal const String FROM_WHERE_getKeyBits = "FROM keys WHERE key_name=?";
		protected internal const String SELECT_getKeysOfIdentity = "SELECT key_name "
				+ "FROM keys JOIN identities ON keys.identity_id=identities.id "
				+ "WHERE identities.identity=?";
		protected internal const String UPDATE_setDefaultKeyOfIdentity_reset = "UPDATE keys SET is_default=0 WHERE is_default=1";
		protected internal const String UPDATE_setDefaultKeyOfIdentity_set = "UPDATE keys SET is_default=1 WHERE key_name=?";
		protected internal const String FROM_WHERE_getDefaultKeyOfIdentity = "FROM keys JOIN identities ON keys.identity_id=identities.id "
				+ "WHERE identities.identity=? AND keys.is_default=1";
	
		protected internal const String SELECT_hasCertificate = "SELECT id FROM certificates WHERE certificate_name=?";
		protected internal const String INSERT_addCertificate = "INSERT INTO certificates "
				+ "(key_id, certificate_name, certificate_data) "
				+ "VALUES ((SELECT id FROM keys WHERE key_name=?), ?, ?)";
		protected internal const String UPDATE_addCertificate = "UPDATE certificates SET certificate_data=? WHERE certificate_name=?";
		protected internal const String DELETE_removeCertificate = "DELETE FROM certificates WHERE certificate_name=?";
		protected internal const String SELECT_getCertificatesOfKey = "SELECT certificate_name "
				+ "FROM certificates JOIN keys ON certificates.key_id=keys.id "
				+ "WHERE keys.key_name=?";
		protected internal const String UPDATE_setDefaultCertificateOfKey_reset = "UPDATE certificates SET is_default=0 WHERE is_default=1";
		protected internal const String UPDATE_setDefaultCertificateOfKey_set = "UPDATE certificates SET is_default=1 WHERE certificate_name=?";
		protected internal const String FROM_WHERE_getDefaultCertificateOfKey = "FROM certificates JOIN keys ON certificates.key_id=keys.id "
				+ "WHERE certificates.is_default=1 AND keys.key_name=?";
	
		protected internal const String SELECT_hasDefaultIdentity = "SELECT id FROM identities WHERE is_default=1";
		protected internal const String SELECT_hasDefaultKeyOfIdentity = "SELECT keys.id "
				+ "FROM keys JOIN identities ON keys.identity_id=identities.id "
				+ "WHERE identities.identity=? AND keys.is_default=1";
		protected internal const String SELECT_hasDefaultCertificateOfKey = "SELECT certificates.id "
				+ "FROM certificates JOIN keys ON certificates.key_id=keys.id "
				+ "WHERE certificates.is_default=1 AND keys.key_name=?";
	}
}
