// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
// 12/23/15 3:55 PM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (C) 2014-2015 Regents of the University of California.
/// </summary>
///
namespace net.named_data.jndn.security.certificate {
	
	using System;
	using System.Collections;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	using net.named_data.jndn.encoding;
	using net.named_data.jndn.encoding.der;
	using net.named_data.jndn.util;
	
	/// <summary>
	/// A CertificateSubjectDescription represents the SubjectDescription entry in a
	/// Certificate.
	/// </summary>
	///
	public class CertificateSubjectDescription {
		/// <summary>
		/// Create a new CertificateSubjectDescription.
		/// </summary>
		///
		/// <param name="oid">The oid of the subject description entry.</param>
		/// <param name="value">The value of the subject description entry.</param>
		public CertificateSubjectDescription(String oid, String value_ren) {
			oid_ = new OID(oid);
			value_ = value_ren;
		}
	
		/// <summary>
		/// Create a new CertificateSubjectDescription.
		/// </summary>
		///
		/// <param name="oid">The oid of the subject description entry.</param>
		/// <param name="value">The value of the subject description entry.</param>
		public CertificateSubjectDescription(OID oid, String value_ren) {
			oid_ = oid;
			value_ = value_ren;
		}
	
		/// <summary>
		/// Encode the object into a DER syntax tree.
		/// </summary>
		///
		/// <returns>The encoded DER syntax tree.</returns>
		public DerNode toDer() {
			net.named_data.jndn.encoding.der.DerNode.DerSequence  root = new net.named_data.jndn.encoding.der.DerNode.DerSequence ();
	
			net.named_data.jndn.encoding.der.DerNode.DerOid  oid = new net.named_data.jndn.encoding.der.DerNode.DerOid (oid_);
			// Use Blob to convert the String to a ByteBuffer.
			net.named_data.jndn.encoding.der.DerNode.DerPrintableString  // Use Blob to convert the String to a ByteBuffer.
					value_ren = new net.named_data.jndn.encoding.der.DerNode.DerPrintableString (
					new Blob(value_).buf());
	
			root.addChild(oid);
			root.addChild(value_ren);
	
			return root;
		}
	
		public String getOidString() {
			return "" + oid_;
		}
	
		public String getValue() {
			return value_;
		}
	
		private readonly OID oid_;
		private readonly String value_;
	}
}
